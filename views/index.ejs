<html>
  <head>
    <title><%= title %></title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="stylesheet" type="text/css" href="styles.css" />
    <script src="https://cdn.jsdelivr.net/npm/magic-sdk/dist/magic.js"></script>
    <script>
      const magic = new Magic("<%= MAGIC_PUBLISHABLE_KEY %>");
      const serverUrl = window.location.href;
      const render = async () => {
        /* Show login form if user is not logged in */
        let html = `
          <h1>Please sign up or login</h1>
          <form onsubmit="handleLogin(event)">
            <input type="email" name="email" required="required" placeholder="Enter your email" />
            <button type="submit">Send</button>
          </form>
        `;
        /* Get user data including email & apple count */
        let res = await fetch(`${serverUrl}user/data`);
        if (res.status == 200) {
          let data = await res.json();
          let userData = data.user;
          let authzData = data.authorization.resp.resourceInstances;
          html = `
            <h1>Current User Email: ${userData.email} (${userData.issuer})</h1>
            <h2>Cerbos Authorization Result</h2>
            <p>
                This demo passes the Magic.link user information to the Cerbos PDP to authorize 
                the user to two contact resources. The first of which you own - and thus full access - 
                and the second you don't so have only read access. This is defined in policies found here.
            </p>
            <table>
              <thead>
                <tr>
                  <th>Contact ID</th>
                  <th>Read</th>
                  <th>Update</th>
                  <th>Delete</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>5cc22de4</td>
                  <td>${authzData["5cc22de4"].actions.read}</td>
                  <td>${authzData["5cc22de4"].actions.update}</td>
                  <td>${authzData["5cc22de4"].actions.delete}</td>
                </tr>
                <tr>
                  <td>ac29e6df</td>
                  <td>${authzData["ac29e6df"].actions.read}</td>
                  <td>${authzData["ac29e6df"].actions.update}</td>
                  <td>${authzData["ac29e6df"].actions.delete}</td>
                </tr>
              </tbody>
            </table>
            <button onclick="handleLogout()">Logout</button>
          `;
        }
        document.getElementById("app").innerHTML = html;
      };

      const handleLogin = async e => {
        e.preventDefault();
        const email = new FormData(e.target).get("email");
        if (email) {
          /* One-liner login ðŸ¤¯ */
          const didToken = await magic.auth.loginWithMagicLink({ email });
          await fetch(`${serverUrl}user/login`, {
            headers: new Headers({
              Authorization: "Bearer " + didToken
            }),
            withCredentials: true,
            credentials: "same-origin",
            method: "POST"
          });
          render();
        }
      };

      const handleLogout = async () => {
        await fetch(`${serverUrl}user/logout`, { method: "POST" });
        render();
      };

      const handleBuyApple = async () => {
        await fetch(`${serverUrl}user/buy-apple`, { method: "POST" });
        render();
      };
    </script>
  </head>
  <body onload="render()">
    <div id="app">Loading...</div>
  </body>
</html>
